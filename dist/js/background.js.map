{"version":3,"file":"js/background.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sources":["webpack://fofa-search/./src/background/main.js"],"sourcesContent":["/*\r\n * @Author: zhizhuo \r\n * @Date: 2023-01-22 15:40:56 \r\n * @Last Modified by: zhizhuo\r\n * @Last Modified time: 2023-02-02 13:45:25\r\n */\r\n\r\n\r\n\r\n/* eslint-disable */\r\nconsole.log(\"background page is ok\")\r\n\r\n\r\nlet URLDATA = null;\r\nlet COOKIESDATA = null;\r\n\r\n\r\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\r\n        // console.log('hostname')\r\n    // console.log('cachedHost',cachedHost)\r\n        // console.log(request);\r\n        switch (request.cmd) {\r\n            case 'getHost':\r\n                let url = new URL(request.url);\r\n                let hostname = url.hostname;\r\n                \r\n                getCache(hostname, 'getUrlInfo', function (cachedHost) {\r\n                    // console.log('hostname',hostname);\r\n                    // console.log('cachedHost',cachedHost);\r\n                    if (cachedHost) {\r\n                      sendResponse({\r\n                        'hostname': hostname,\r\n                        'host': cachedHost,\r\n                      })\r\n                    }\r\n                });\r\n                //异步调用，必须返回true\r\n                return true;\r\n            case 'inject':\r\n                return request.url;\r\n            case 'popup':\r\n                switch (request.click) {\r\n                    case 'geturl':\r\n                        sendResponse(URLDATA);\r\n                        break;\r\n                    case 'getcookies':\r\n                        get_cookies(URLDATA)\r\n                        sendResponse(COOKIESDATA);\r\n                        break;\r\n                    case 'do':\r\n                        sendResponse('sendurl success');\r\n                        // eslint-disable-next-line no-undef\r\n                        chrome.runtime.sendMessage(\r\n                            { cmd: \"background\", click: \"sendurl\", data: URLDATA },\r\n                            function (response) {\r\n                                console.log(\"response\", response);\r\n                            }\r\n                        );\r\n                        break;\r\n                    default:\r\n                        sendResponse('OK');\r\n                        break;\r\n                }\r\n            default:\r\n                sendResponse('OK');\r\n                break;\r\n\r\n        }\r\n        sendResponse('OK');\r\n    });\r\n\r\n\r\n\r\nfunction get_cookies(url) {\r\n    return chrome.cookies.getAll({url}, function (cookies) {\r\n        const resList = cookies.map(item => {\r\n            return `${item.name}=${item.value}`\r\n        })\r\n        const cookieStr = resList.join(\";\")\r\n        console.log(\"cookies-----\", cookieStr);\r\n        COOKIESDATA = cookieStr\r\n        return cookieStr;\r\n    });\r\n}\r\n\r\nasync function saveCache(host,res,key){\r\n    try {\r\n        // console.log('saveCache', host, res, key);\r\n        let result =  await res; // 等待 Promise 返回结果\r\n        // console.log('json', JSON.stringify(result));\r\n    \r\n        chrome.storage.local.get(host, function(data) {\r\n            hostData = data[host] || {};\r\n            hostData[key] = JSON.stringify(result);\r\n            let newData = {};\r\n            newData[host] = hostData;\r\n            // console.log('newData',newData)\r\n            chrome.storage.local.set(newData);\r\n        });\r\n    } catch (error) {\r\n        console.log('saveCache error', error);\r\n    }\r\n}\r\n\r\nfunction getCache(host, key, callback) {\r\n    chrome.storage.local.get(host, function (data) {\r\n        // console.log('getCache-------------------', host, key);\r\n        // console.log('getCache', data);\r\n\r\n        hostData = data[host] || {};\r\n        let parsedData = JSON.parse(hostData[key] || '{}');\r\n\r\n        callback(parsedData);\r\n    });\r\n}\r\n\r\n\r\nfunction getUrlInfo(url,hostname){\r\n    // hostname = getHostname(url)\r\n    resData = getFofaInfo(hostname)\r\n    console.log(resData)\r\n    saveCache(hostname,resData,'getUrlInfo')\r\n}\r\n\r\n\r\n/*\r\n * Listen for changes in the URL in any of the tabs.\r\n */\r\nchrome.tabs.onUpdated.addListener(function (id, info, tab) {\r\n    // console.log('onUpdated')\r\n    if (tab.status === 'loading') {\r\n        // console.log(\"tab.url\",tab.url)\r\n        //判断tab.url是否为http或https\r\n        if (tab.url.startsWith('http') || tab.url.startsWith('https')) {\r\n\r\n        let url = new URL(tab.url);\r\n        hostname = url.hostname\r\n        // console.log(\"tab.url\",tab.url)\r\n        // console.log('hostname',url.hostname)\r\n        getUrlInfo(tab.url,hostname)\r\n        }else{\r\n            console.log('不是http或https')\r\n        }\r\n\r\n        // getHostDetail(hostname)\r\n    }\r\n  })\r\n\r\n\r\n\r\n  chrome.windows.onRemoved.addListener(function(windowId) {\r\n    chrome.storage.local.clear(function() {\r\n        console.log('Local storage cleared on browser close.');\r\n    });\r\n    // clearCache(hostname)\r\n\r\n});\r\n  \r\n  chrome.tabs.onActivated.addListener(function (activeInfo) {\r\n    if (activeInfo.tabId) {\r\n        chrome.tabs.get(activeInfo.tabId, function (tab) {\r\n            //判断是不是http或https\r\n            if (tab.url.startsWith('http') || tab.url.startsWith('https')) {\r\n                let url = new URL(tab.url);\r\n                hostname = url.hostname\r\n                // console.log(\"tab.url\",tab.url)\r\n                // console.log('hostname',url.hostname)\r\n                getUrlInfo(tab.url,hostname)\r\n            }else{\r\n                console.log('不是http或https')\r\n            }\r\n          })\r\n    }\r\n  })\r\n\r\n  function makeRequest(url) {\r\n    return fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // console.log(data);\r\n        return data;\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n\r\n  function getFofaInfo(hostname,ip){\r\n    let url = 'https://amap.fofa.info/host/'+hostname\r\n    //判断hostname是否为空\r\n    if (hostname) {\r\n        return makeRequest(url)\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n"],"names":[],"sourceRoot":""}